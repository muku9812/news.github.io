{"version":3,"sources":["webpack:///./node_modules/@presto-player/components/dist/custom-elements/hls.js"],"names":["_ref","config","selector","src","preload","Promise","resolve","reject","window","Hls","isSupported","_wp","autoStartLoad","includes","wp","blocks","hls","loadSource","on","Events","LEVEL_SWITCHED","event","data","span","closest","querySelector","autoLevelEnabled","innerHTML","concat","levels","level","height","MANIFEST_PARSED","availableQualities","map","l","unshift","startLevel","findIndex","qty","_prestoPlayer","parseInt","prestoPlayer","hls_start_level","quality","default","options","forced","onChange","newQuality","prestoHLS","currentLevel","forEach","levelIndex","console","log","attachMedia","player","firstPlay","startLoad","off","setTimeout","subtitleTrack","currentTrack"],"mappings":";;;;;;;;;;;;;;;;;mIAAA,mBAkBuM,UAlBjI,SAAaA,GAAM,IAAIC,EAAOD,EAAKC,OAAOC,EAASF,EAAKE,SAASC,EAAIH,EAAKG,IAAIC,EAAQJ,EAAKI,QAAQ,OAAO,IAAIC,SAAQ,SAASC,EAAQC,GAAQ,GAAIC,OAAOC,IAAX,CAAwB,GAAGD,OAAOC,IAAIC,cAAc,CAAC,IAAIC,EAC1QC,GAAe,CAAC,WAAW,QAAQC,SAAST,GAClC,QAAVO,EAAIG,UAAkB,IAANH,GAAcA,EAAII,SAAQH,GAAc,GAC5D,IAAII,EAAI,IAAIR,OAAOC,IAAI,CAACG,cAAcA,IAegE,OAfhDI,EAAIC,WAAWd,GACrEa,EAAIE,GAAGV,OAAOC,IAAIU,OAAOC,gBAAe,SAASC,EAAMC,GAAM,IAAIC,EAAKrB,EAASsB,QAAQ,2BAA2BC,cAAc,gEAAmET,EAAIU,iBAAkBH,EAAKI,UAAU,SAASC,OAAOZ,EAAIa,OAAOP,EAAKQ,OAAOC,OAAO,MAAYR,EAAKI,UAAU,eAGjTX,EAAIE,GAAGV,OAAOC,IAAIU,OAAOa,iBAAgB,SAASX,EAAMC,GACxD,IAAIW,EAAmBjB,EAAIa,OAAOK,KAAI,SAASC,GAAG,OAAOA,EAAEJ,UAAUE,EAAmBG,QAAQ,GAEhG,IAAIC,EAAWJ,EAAmBK,WAAU,SAASC,GAAK,IAAIC,EAAc,OAAOD,IAAME,SAAwC,QAA9BD,EAAcE,oBAAsC,IAAhBF,OAAuB,EAAOA,EAAcG,oBAAoB3B,EAAIqB,WAAWA,EAAWA,EAAW,EAAE,EAC9OpC,EAAO2C,QAAQ,CAACC,QAAQ,EAAEC,QAAQb,EAClCc,QAAO,EAAKC,SAAS,SAAkBC,GAA4B,IAAbA,EAAgBC,UAAUC,cAAc,EACxFD,UAAUrB,OAAOuB,SAAQ,SAAStB,EAAMuB,GAAevB,EAAMC,SAASkB,IAAYK,QAAQC,IAAI,4BAA4BN,GAAYC,UAAUC,aAAaE,QACnKrC,EAAIwC,YAAYtD,GAAUM,OAAO0C,UAAUlC,EAC3C,IAAIyC,EAAO,IAAI,IAAavD,EAAS,YAAe,GAAGD,IAASwD,EAAOzC,IAAIA,EAGC,OAFWyC,EAAOvC,GAAG,WAAnF,SAASwC,IAAY1C,EAAI2C,WAAW,GAAGF,EAAOG,IAAI,UAAUF,MAC1ED,EAAOvC,GAAG,kBAAiB,WAC3B2C,YAAW,WAAW,OAAO7C,EAAI8C,cAAcL,EAAOM,eAAe,OAAczD,EAAQmD,MAAmB,OAAOnD,EAAQ,IAAI,IAAaJ,EAAS,YAAe,GAAGD","file":"analytics/4-9ff758a9.js","sourcesContent":["import{P as PrestoPlayer,_ as _objectSpread2}from'./index.js';var hls=function hls(_ref){var config=_ref.config,selector=_ref.selector,src=_ref.src,preload=_ref.preload;return new Promise(function(resolve,reject){if(!window.Hls){return;}if(window.Hls.isSupported()){var _wp;// should we autoload start\nvar autoStartLoad=!['metadata','none'].includes(preload);// always autoload in admin for preview\nif((_wp=wp)!==null&&_wp!==void 0&&_wp.blocks){autoStartLoad=true;}// maybe don't auto start load depending on performance parameter\nvar hls=new window.Hls({autoStartLoad:autoStartLoad});hls.loadSource(src);// update menu container to dynamically display quality\nhls.on(window.Hls.Events.LEVEL_SWITCHED,function(event,data){var span=selector.closest('.presto-player__wrapper').querySelector(\".plyr__menu__container [data-plyr='quality'][value='0'] span\");if(hls.autoLevelEnabled){span.innerHTML=\"AUTO (\".concat(hls.levels[data.level].height,\"p)\");}else{span.innerHTML=\"AUTO\";}});// From the m3u8 playlist, hls parses the manifest and returns\n// all available video qualities. This is important, in this approach,\n// we will have one source on the Plyr player.\nhls.on(window.Hls.Events.MANIFEST_PARSED,function(event,data){// Transform available levels into an array of integers (height values).\nvar availableQualities=hls.levels.map(function(l){return l.height;});availableQualities.unshift(0);//prepend 0 to quality array;\n// do start level\nvar startLevel=availableQualities.findIndex(function(qty){var _prestoPlayer;return qty===parseInt((_prestoPlayer=prestoPlayer)===null||_prestoPlayer===void 0?void 0:_prestoPlayer.hls_start_level);});hls.startLevel=startLevel?startLevel-1:2;// Add new qualities to option\nconfig.quality={default:0,options:availableQualities,// this ensures Plyr to use Hls to update quality level\nforced:true,onChange:function onChange(newQuality){if(newQuality===0){prestoHLS.currentLevel=-1;//Enable AUTO quality if option.value = 0\n}else{prestoHLS.levels.forEach(function(level,levelIndex){if(level.height===newQuality){console.log('Found quality match with '+newQuality);prestoHLS.currentLevel=levelIndex;}});}}};// attach media and make our HLS options available globally\nhls.attachMedia(selector);window.prestoHLS=hls;// Initialize player\nvar player=new PrestoPlayer(selector,_objectSpread2({},config));player.hls=hls;// make sure we start loading on the first play\nvar firstPlay=function firstPlay(){hls.startLoad(-1);player.off('waiting',firstPlay);};player.on('waiting',firstPlay);// Handle changing captions\nplayer.on('languagechange',function(){// Caption support is still flaky. See: https://github.com/sampotts/plyr/issues/994\nsetTimeout(function(){return hls.subtitleTrack=player.currentTrack;},50);});return resolve(player);});return;}return resolve(new PrestoPlayer(selector,_objectSpread2({},config)));});};export default hls;"],"sourceRoot":""}